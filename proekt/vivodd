import asyncio  
import logging  
from aiogram import Bot, Dispatcher, types  
from aiogram.filters.command import Command  
from configs import Config 
from aiogram import F, Router
from random import randint 
from aiogram.utils.keyboard import ReplyKeyboardBuilder 
from aiogram.utils.keyboard import InlineKeyboardBuilder 
import sqlite3

from teext import *





router = Router()




@router.callback_query(F.data == "A1") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['A1'])

@router.callback_query(F.data == "A2") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['A2'])

@router.callback_query(F.data == "B1") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['B1'])

@router.callback_query(F.data == "B2") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['B2'])

@router.callback_query(F.data == "C1") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['C1'])

@router.callback_query(F.data == "C2") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['C2'])

@router.callback_query(F.data == "D1")
async def send_random_value(callback: types.CallbackQuery):  
    await callback.message.answer(
        text = answers['D1'])

@router.callback_query(F.data == "D2") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['D2'])


@router.callback_query(F.data == "A3") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['A3'])
    
@router.callback_query(F.data == "A4") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['A4'])
    
@router.callback_query(F.data == "B3") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['B3'])
    
@router.callback_query(F.data == "B4") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['B4'])
    
@router.callback_query(F.data == "C3") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['C3'])
    

@router.callback_query(F.data == "C4") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['C4'])
    
@router.callback_query(F.data == "D3") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['D3'])
    

@router.callback_query(F.data == "D4") 
async def send_random_value(callback: types.CallbackQuery): 
    await callback.message.answer(
        text = answers['D4'])
    





@router.message(F.text.lower() == "помощь при инсульте") 
async def stoyka(message: types.Message): 
    await message.answer(
        text = answers['D5'])
